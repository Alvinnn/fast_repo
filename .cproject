<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.configuration.debug.1031666119">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.debug.1031666119" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.debug.1031666119" name="Debug" parent="com.nvidia.cuda.ide.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.configuration.debug.1031666119." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.exe.debug.1200359767" name="CUDA Toolkit 7.0" superClass="com.nvidia.cuda.tools.toolchain.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.2061821926" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder autoBuildTarget="all" buildPath="${workspace_loc:/FASTnew}/Debug" cleanBuildTarget="clean" enableAutoBuild="false" enableCleanBuild="true" enabledIncrementalBuild="true" id="com.nvidia.cuda.ide.builder.1951111473" incrementalBuildTarget="all" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 7.0 Builder" parallelBuildOn="false" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1177716749" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.560900961" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.1718632565" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.455695028" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1615241099" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.include.paths.893069270" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/local/include"/>
									<listOptionValue builtIn="false" value="/Developer/NVIDIA/CUDA-7.0/samples/common/inc"/>
								</option>
								<option id="nvcc.compiler.cpp11option.196759592" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<inputType id="nvcc.compiler.input.cu.201829011" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.856423953" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.1068946185" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.2145803000" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.1243174199" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="opencv_ml"/>
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="opencv_imgcodecs"/>
									<listOptionValue builtIn="false" value="opencv_imgproc"/>
								</option>
								<option id="nvcc.linker.option.paths.958501086" name="Library search path (-L)" superClass="nvcc.linker.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/local/lib"/>
									<listOptionValue builtIn="false" value="/Developer/NVIDIA/CUDA-7.0/samples/common/inc"/>
								</option>
								<inputType id="nvcc.linker.input.1927587494" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.576249645" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.168824025" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1310102206" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="3" minor="0"/>
					<ptx major="3" minor="0"/>
				</executable>
				<editor-arch major="3" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.configuration.release.1906276580">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.release.1906276580" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.release.1906276580" name="Release" parent="com.nvidia.cuda.ide.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.configuration.release.1906276580." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.exe.release.1605987953" name="CUDA Toolkit 7.0" superClass="com.nvidia.cuda.ide.toolchain.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1537709616" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder autoBuildTarget="all" buildPath="${workspace_loc:/FASTnew}/Release" cleanBuildTarget="clean" enableAutoBuild="false" enableCleanBuild="true" enabledIncrementalBuild="true" id="com.nvidia.cuda.ide.builder.760225578" incrementalBuildTarget="all" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 7.0 Builder" parallelBuildOn="false" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.907175095" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1309254737" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.92350421" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.1850739059" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1941415303" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.include.paths.399383464" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="/usr/local/include"/>
									<listOptionValue builtIn="false" value="/Developer/NVIDIA/CUDA-7.0/samples/common/inc"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1652059619" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1172663186" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.528501293" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.985113943" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.1581769476" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="opencv_ml"/>
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="opencv_imgcodecs"/>
									<listOptionValue builtIn="false" value="opencv_imgproc"/>
								</option>
								<option id="nvcc.linker.option.paths.1922328137" name="Library search path (-L)" superClass="nvcc.linker.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/local/lib"/>
									<listOptionValue builtIn="false" value="/Developer/NVIDIA/CUDA-7.0/samples/common/inc"/>
								</option>
								<inputType id="nvcc.linker.input.1438894189" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.308023409" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.404263133" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.767891" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="3" minor="0"/>
					<ptx major="3" minor="0"/>
				</executable>
				<editor-arch major="3" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="FASTnew.com.nvidia.cuda.ide.exe.1640544699" name="Executable" projectType="com.nvidia.cuda.ide.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1031666119;com.nvidia.cuda.ide.configuration.debug.1031666119.;nvcc.compiler.base.1177716749;nvcc.compiler.input.cu.201829011">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1031666119;com.nvidia.cuda.ide.configuration.debug.1031666119.;nvcc.compiler.base.1177716749;nvcc.compiler.input.c.1068946185">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1031666119;com.nvidia.cuda.ide.configuration.debug.1031666119.;nvcc.compiler.base.1177716749;nvcc.compiler.input.cpp.856423953">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope" versionNumber="2">
		<configuration configurationName="Debug">
			<resource resourceType="PROJECT" workspacePath="/FASTnew"/>
		</configuration>
		<configuration configurationName="Release">
			<resource resourceType="PROJECT" workspacePath="/FASTnew"/>
		</configuration>
	</storageModule>
</cproject>
